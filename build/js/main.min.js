/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

var aboutCompanyButton = document.querySelector('.about-company__button');
var aboutCompanyDescription = document.querySelector('.about-company__description');
var innerHeaderButton = document.querySelector('.inner-header__button');
var openModalButton = document.querySelector('.page-header__button');
var modal = document.querySelector('.modal');
var closeModalButton = document.querySelector('.modal__close-button');
var modalOverlay = document.querySelector('.modal__overlay');
var body = document.querySelector('.page-body');
var inputName = document.getElementById('modal-form-name');
var footerAccordion = document.querySelectorAll('.footer-accordion');
var navigationToggle = document.querySelector('.navigation__toggle');
var contactsToggle = document.querySelector('.footer-contacts__toggle');
var navigation = document.querySelector('.navigation');
var footerContacts = document.querySelector('.footer-contacts'); // Развернуть описание в блоке "О компании"

aboutCompanyButton.addEventListener('click', function () {
  if (aboutCompanyDescription.classList.contains('is-expand')) {
    aboutCompanyDescription.classList.remove('is-expand');
  } else {
    aboutCompanyDescription.classList.add('is-expand');
  }
}); // Плавный скролл

function getSmoothScrolling(element) {
  window.scroll({
    left: 0,
    top: element.offsetTop,
    behavior: 'smooth'
  });
}

innerHeaderButton.addEventListener('click', function (evt) {
  evt.preventDefault();
  getSmoothScrolling(document.getElementById('feedback'));
}); // Попап обратной связи

var isEscapeKey = function isEscapeKey(evt) {
  return evt.key === 'Escape';
};

var onModalEscKeydown = function onModalEscKeydown(evt) {
  if (isEscapeKey(evt)) {
    evt.preventDefault();
    closeModal();
  }
};

function openModal() {
  body.classList.add('is-locked');
  modal.classList.add('is-opened');
  document.addEventListener('keydown', onModalEscKeydown);
  inputName.focus();
}

function closeModal() {
  body.classList.remove('is-locked');
  modal.classList.remove('is-opened');
  document.removeEventListener('keydown', onModalEscKeydown);
}

openModalButton.addEventListener('click', function () {
  openModal();
});
closeModalButton.addEventListener('click', function () {
  closeModal();
});
modalOverlay.addEventListener('click', function () {
  body.classList.remove('is-locked');
  modal.classList.remove('is-opened');
}); // Аккордеон

navigation.classList.remove('is-nojs');
footerContacts.classList.remove('is-nojs');

function openAccordeon(element) {
  element.classList.remove('is-closed');
  element.classList.add('is-opened');
}

function closeAccordeon(element) {
  element.classList.remove('is-opened');
  element.classList.add('is-closed');
}

navigationToggle.addEventListener('click', function () {
  if (navigation.classList.contains('is-closed')) {
    footerAccordion.forEach(function (element) {
      return closeAccordeon(element);
    });
    openAccordeon(navigation);
  } else {
    closeAccordeon(navigation);
  }
});
contactsToggle.addEventListener('click', function () {
  if (footerContacts.classList.contains('is-closed')) {
    footerAccordion.forEach(function (element) {
      return closeAccordeon(element);
    });
    openAccordeon(footerContacts);
  } else {
    closeAccordeon(footerContacts);
  }
}); // closeModalButton.addEventListener('click', () => {
//   closeModal();
// });
// // ---------------------------------
// window.addEventListener('DOMContentLoaded', () => {
//   // Utils
//   // ---------------------------------
//   iosVhFix();
//   // Modules
//   // ---------------------------------
//   // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
//   // в load следует добавить скрипты, не участвующие в работе первого экрана
//   window.addEventListener('load', () => {
//     initModals();
//   });
// });
// ---------------------------------
// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.
// привязывайте js не на классы, а на дата атрибуты (data-validate)
// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅
// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.
// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();
// используйте .closest(el)

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map